<!DOCTYPE html>
<html>

<head>
    <%- include('config') %>
    <title>스케줄 관리</title>
    <script src="/public/js/fullcalendar/core.js"></script>
    <script src="/public/js/fullcalendar/timegrid.js"></script>
    <script src="/public/js/fullcalendar/daygrid.js"></script>
    <script src="/public/js/fullcalendar/interaction.js"></script>
    <link rel="stylesheet" href="/public/stylesheets/fullcalendar/core.css" />
    <link rel="stylesheet" href="/public/stylesheets/fullcalendar/timegrid.css" />
    <link rel="stylesheet" href="/public/stylesheets/fullcalendar/daygrid.css" />

    <script>
        $(function () {
            setPost();
            getEvents();
            console.log(calendar);
        });
        // remove whatever date
        function addRemove(d) {
            const form = $('#calendar-form');
            var date=new Date(d);
            var dateStr=date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();
            $(form).append(`<input name='remove' value='${dateStr}'>`);
        }

        // managae driver
        function addDriver(date, id) {
            // check origianl date
            if ((String)(date).indexOf('.') != -1) {
                date = parseDate(date);
            }
            date = ((String)(date)).replace(/\s/gi, "");
            const form = $('#calendar-form');
            // remove original
            $(form).children(`input[name=driver][value*='${date}']`).remove();
            // append new
            $(form).append(`<input name="driver" style="width:100vw;" value="${date}:${id}">`);
        }

        function removeDriver(date) {
            if ((String)(date).indexOf('.') != -1) {
                date = parseDate(date);
            }
            date = (String)(date).replace(/\s/gi, "");;

            const form = $('#calendar-form');
            $(form).children(`input[name=driver][value*='${date}']`).remove();
        }

        // manage bus
        function addBus(date, id) {
            // check origianl date
            if ((String)(date).indexOf('.') != -1) {
                date = parseDate(date);
            }
            date = ((String)(date)).replace(/\s/gi, "");
            const form = $('#calendar-form');
            // remove original
            $(form).children(`input[name=bus][value*='${date}']`).remove();
            // append new
            $(form).append(`<input name="bus" value="${date}:${id}"  style="width:100vw;">`);
        }

        function removeBus(date) {
            if ((String)(date).indexOf('.') != -1) {
                date = parseDate(date);
            }
            date = (String)(date).replace(/\s/gi, "");;

            const form = $('#calendar-form');
            $(form).children(`input[name=bus][value*='${date}']`).remove();
        }

        function parseDate(date) {
            var line = [];
            line = (String)(date).split('.');
            for (var i = 1; i < 3; i++) {
                line[i] = line[i].substr(0, line[i].length - 1);
                if (line[i].length < 2) {
                    line[i] = '0' + line[i];
                }
            }
            date = line[0] + '-' + line[1] + '-' + line[2];
            console.log(date);
            return date;
        }
        var num = 0;
        var calnedar;

        document.addEventListener('DOMContentLoaded', function () {
            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendarInteraction.Draggable;

            var busEvent = document.getElementById('bus-event');
            var driverEvent = document.getElementById('driver-event');
            var calendarEl = document.getElementById('calendar');

            // initialize the external events
            // -----------------------------------------------------------------

            new Draggable(busEvent, {
                itemSelector: '.event',
                eventData: function (eventEl) {
                    return {
                        title: eventEl.innerText,
                        color: '#011D46',
                        textColor: '#ffffff',
                        id: 'bus-' + $(eventEl).data('id') + num++,
                        extendedProps: {
                            class: 'bus',
                            id: $(eventEl).data('id')
                        },
                    };
                }
            });

            new Draggable(driverEvent, {
                itemSelector: '.event2',
                eventData: function (eventEl) {
                    return {
                        title: eventEl.innerText,
                        color: '#ffcc00',
                        id: 'driver-' + $(eventEl).data('id') + num++,
                        extendedProps: {
                            class: 'driver',
                            id: $(eventEl).data('id')
                        }
                    };
                }
            });

            // initialize the calendar
            // -----------------------------------------------------------------

            calendar = new Calendar(calendarEl, {
                plugins: ['interaction', 'dayGrid', 'timeGrid'],
                header: {
                    left: 'prev',
                    center: 'title',
                    right: 'next'
                },
                editable: true,
                droppable: false, // this allows things to be dropped onto the calendar
                locale: 'ko',
                eventLimit: true, // for all non-TimeGrid views
                eventLimitText: '개 이상은 무시됩니다.',
                views: {
                    month: {
                        eventLimit: 2 // adjust to 6 only for timeGridWeek/timeGridDay
                    }
                },
                drop: function (info) {
                    var originalEventObject = $(this).data('eventObject');
                    console.log(originalEventObject);

                    // check cat
                    const cat = $(info.draggedEl).data('cat');
                    const id = $(info.draggedEl).data('id');
                    var line = (String)(info.dateStr).split('-');
                    var date = line[0] + '-' + (line[1].replace('0', '')) + '-' + line[2].replace('0', '');
                    if (cat == 'bus') {
                        console.log('new bus');
                        removeBus(date);
                        addBus(date, id);
                    } else {
                        console.log('new driver');
                        removeDriver(date);
                        addDriver(date, id);
                    }

                },
                eventDragStop: function (event) {
                    var trashEl = $('#trashCan');
                    var ofs = trashEl.offset();
                    var x1 = ofs.left;
                    var x2 = ofs.left + trashEl.outerWidth(true);
                    var y1 = ofs.top;
                    var y2 = ofs.top + trashEl.outerHeight(true);

                    console.log(event.event.start);
                    addRemove(event.event.start);
                    // remove event fully
                    if (event.jsEvent.pageX >= x1 && event.jsEvent.pageX <= x2 &&
                        event.jsEvent.pageY >= y1 && event.jsEvent.pageY <= y2) {
                        var event = calendar.getEventById(event.event.id);
                        event.remove();
                        handleRemove(event);                    
                    }
                },
                eventDrop: function (event, jsEvent, ui, view) {
                    console.log('drop');
                    handleRemove(event.oldEvent);
                    handleAdd(event);
                },
                eventResize: function (event, jsEvent, ui, view) {
                    console.log('resize');
                    handleAdd(event);
                },
                eventResizeStart: function (event, delta, revertFunc, jsEvent, ui, view) {
                    console.log('resize start');
                    handleRemove(event.event);
                }
            });

            calendar.render();
        });

        function handleRemove(event) {
            // removing all
            var oldStart = new Date(event.start).toLocaleDateString().replace(/\s/gi, "");
            console.log(event.extendedProps.class);
            console.log('remove');
            if (event.end) {
                var oldEnd = new Date(event.end).toLocaleDateString();
                var oldStartDate = parseInt(oldStart.split('.')[2]);
                var oldEndDate = parseInt(oldEnd.split('.')[2]);
                var oldDiff = oldEndDate - oldStartDate;


                for (var i = 0; i < oldDiff; i++) {
                    var line = ((String)(oldStart)).split('.');
                    var date = line[0] + '-' + line[1] + '-' + (parseInt(line[2]) + i);
                    console.log(date);
                    if (event.extendedProps.class == 'bus') {
                        removeBus(date);
                    } else {
                        removeDriver(date);
                    }
                }
            } else {
                var line = ((String)(oldStart)).split('.');
                var date = line[0] + '-' + line[1] + '-' + (parseInt(line[2]));
                date = (String)(date).replace(/\s/gi, "");
                console.log(date);
                if (event.extendedProps.class == 'bus') {
                    removeBus(date);
                } else {
                    removeDriver(date);
                }
            }
        }

        function handleAdd(event) {
            console.log(event.event.extendedProps);
            // add all
            console.log('add');
            var start = new Date(event.event.start).toLocaleDateString().replace(/\s/gi, "");
            const id = (event.event.extendedProps.id);
            if (event.event.end) {
                var end = new Date(event.event.end).toLocaleDateString();
                var startDate = parseInt(start.split('.')[2]);
                var endDate = parseInt(end.split('.')[2]);
                var diff = endDate - startDate;

                for (var i = 0; i < diff; i++) {
                    var line = ((String)(start)).split('.');
                    var date = line[0] + '-' + line[1] + '-' + (parseInt(line[2]) + i);
                    console.log(date);

                    if (event.event.extendedProps.class == 'bus') {
                        addBus(date, id);
                    } else {
                        addDriver(date, id);
                    }
                }
            } else {
                var line = ((String)(start)).split('.');
                var date = line[0] + '-' + line[1] + '-' + line[2];
                console.log(date);
                if (event.event.extendedProps.class == 'bus') {
                    addBus(date, id);
                } else {
                    addDriver(date, id);
                }
            }
        }

        function setPost() {
            $('#confirm-btn').click(function () {
                if (confirm('기사 및 차량 배치를 수정하시겠습니까?')) {
                    var formData = $('#calendar-form').serialize();
                    formData.app
                    $.ajax({
                        url: '/Bus/Manage/Timeline',
                        type: 'POST',
                        data: formData,
                        success: function (data) {
                            if (data.Result) {
                                alert('기사 및 차량 배치가 수정되었습니다.');
                                location.reload();
                            }
                        }
                    });
                }
            });
        }

        function getEvents() {
            <% for (var i = 0; i < timeline.length; i++) { %>
                var date = new Date('<%=timeline[i].RunDate%>');
                var dateStr = date.getFullYear() + '-';
                if (date.getMonth() <= 8) {
                    dateStr += '0';
                }
                dateStr += (date.getMonth() + 1) + '-';
                if (date.getDate() <= 9) {
                    dateStr += '0';
                }
                dateStr += date.getDate();
                console.log(dateStr);
                // if driver exist
                <% if (timeline[i].DriverID) { %>
                    calendar.addEvent({
                        title: '<%=timeline[i].DriverName%>',
                        start: dateStr,
                        allDay: true,
                        id: 'driver-<%=timeline[i].DriverID%>' + num++,
                        extendedProps: {
                            class: 'driver',
                            id: '<%=timeline[i].DriverID%>'
                        }
                    });
                    addDriver(date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate(), '<%=timeline[i].DriverID%>');
                    // if bus exist
                        <% } if (timeline[i].BusID) { %>
                            calendar.addEvent({
                                title: '<%=timeline[i].Num%>',
                                start: dateStr,
                                allDay: true,
                                color: '#011D46',
                                textColor: '#ffffff',
                                id: 'bus-<%=timeline[i].BusID%>' + num++,
                                extendedProps: {
                                    class: 'bus',
                                    id: '<%=timeline[i].BusID%>'
                                }
                            });
                            addBus(date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate(), '<%=timeline[i].BusID%>');
                                <% }
            } %>
            
        }
    </script>
</head>

<!-- show by iframe -->

<body>
    <div class="vertical">
        <!-- calnedar and data -->
        <div class="horizontal between" style="width: 95%; align-items: baseline;">
            <div class="card" style="width: 70%;">
                <div class="card-body">
                    <div id="calendar"></div>
                </div>
            </div>

            <!-- bus and driver event -->
            <div style="width: 29%; height: 100%;">
                <div class="card">
                    <div class="card-body">
                        <!-- driver list -->
                        <div id="driver-event" style="height: 180px;">
                            <p><strong>기사</strong></p>
                            <% for(var i=0; i<drivers.length; i++) { %>
                            <div class="event2 item-driver" data-cat="driver" data-id="<%=drivers[i].ID%>">
                                <%=drivers[i].Name%></div>
                            <% } %>
                        </div>
                        <hr>
                        <!-- bus ist  -->
                        <div id="bus-event" style="height: 180px;">
                            <p><strong>차량</strong></p>
                            <% for(var i=0; i<bus.length; i++) { %>
                            <div class="event item-bus" data-cat="bus" data-id="<%=bus[i].ID%>"><%=bus[i].Num%></div>
                            <% } %>
                        </div>
                    </div>
                </div>
                <br>
                <div id="trashCan">
                    <img src="/public/images/trashcan.png">
                    <label style="opacity: 0.7; margin-top: 10px;">삭제 스케줄을 드래그하세요.</label>
                </div>
                <br>
                <button class="btn-main" style="width: 100%;" id="confirm-btn">확인</button>
            </div>
        </div>
        <form id="calendar-form" hidden>
            <input name="routeID" value="<%=routeID%>">
        </form>
    </div>
</body>

</html>